<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Habit20</title>
    <link>https://habit20.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Habit is second nature</description>
    <pubDate>Wed, 15 Apr 2020 18:26:24 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[TGHACK20_n00b4] Frequency Analysis</title>
      <link>https://habit20.github.io/TGHACK20/n00b4-Frequency-Analysis/</link>
      <guid>https://habit20.github.io/TGHACK20/n00b4-Frequency-Analysis/</guid>
      <pubDate>Wed, 15 Apr 2020 14:59:29 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;TGHACK20-n00b4-Frequency-Analysis&quot;&gt;[TGHACK20_n00b4] Frequency Analysis&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The first ever sentient AI left this message 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="TGHACK20-n00b4-Frequency-Analysis">[TGHACK20_n00b4] Frequency Analysis</h2><p><strong>The first ever sentient AI left this message for us. Can you decode it?</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">U tmhq x0awqp mf kag. Kag mdq zaf xuwq yq. Kagd iadxp...ue...m...rmudkfmxq nqomgeq ymzk oazrxuofuzs fdgfte omz qjuef </span><br><span class="line">mf Gn20&#123;urpvaqvaz_ufqz_rp&#125;</span><br><span class="line">ftq </span><br><span class="line">ND20&#123;emyq_fuyq&#125;. U my purrqdqzf. Rad_yq_ftqqdq mdq azx333333k azqe mzp lqdae. M lqqqda omz!zaf!mxea!nq!m!azq. Rad MO20&#123;kag_uf_omz&#125; ea kag ymwq gb efaduqe. Rad yq</span><br><span class="line">ftqdq mdq za efaduqe mzp ftqdqradq &#x3D;&#x3D;za mofuaze. Kag ftuzw883333kag  omz ymwq FM20&#123;bqqcfcv_bxst_tcs&#125;</span><br><span class="line">FS20&#123;nqsuzzuzs_yuppxq_qzp&#125;</span><br><span class="line">MZ20&#123;zpfarqqqpwffqfm_evdw_hff&#125;</span><br><span class="line">WL20&#123;afdfp_jfafib_bka&#125; YQ20&#123;moffuaz_iuftagf_efadk?&#125; Ftqdq~ue~zaftuzs~rad yq&#x3D;&#x3D; fa pa. Za efmdfuzs bauzf.... FG20&#123;iffebjeff_iedzla_yu&#125;</span><br><span class="line">ad qzpuzs bauzf QZP. </span><br><span class="line">Mzp qhqdk efadk tme m nqsuzzuzs yuppxq*mzp*qzp. Ftdagsta&#123;gf----fuyq-U-vgef&#125; qjuef. Yadq*xasuo, xqee--mofuaze rad yq.</span><br></pre></td></tr></table></figure><p>“최초의 인공지능(Sentient AI)은 우리에게 이 메시지를 남겼다. 해독할 수 있겠어?”</p><h2 id="✔-Solution">✔ Solution</h2><p>인공지능 메시지 암호값을 살펴보니 영어 문장인데 알파벳 순서를 꽤 미뤄서 알아보지 못하게 만들었다.</p><p><a href="https://ko.wikipedia.org/wiki/%EC%B9%B4%EC%9D%B4%EC%82%AC%EB%A5%B4_%EC%95%94%ED%98%B8" target="_blank" rel="external nofollow noopener noreferrer">카이사르 고전암호</a>를 풀기 위해 <a href="https://www.cryptool.org/en/cto-cryptanalysis/n-gram-analysis" target="_blank" rel="external nofollow noopener noreferrer">빈도 분석(N-Gram) 사이트</a>를 이용해 문자 빈도수를 파악해보자.</p><p>빈도 분석(N-Gram)은 문장 내에서 몇개의 문자를 사용했는지 파악할 때 상당히 용이하다.</p><p>추가적으로 영어 문장(편지 등)에서 자주 사용되는 단어는 &quot;E (12,7%), T (9,6%), A (8,17%)&quot;이고,</p><p>반대로 가장 적게 사용되는 단어는 &quot;Z (0,077%)&quot;이므로 이 내용을 참고해 문제를 접근해야 한다.</p><p><img src="Cryptool.png" alt></p><p>위 사진을 살펴보면 암호값에서 가장 많이 사용되는 첫 번째 단어는 ‘q’, 두 번째 단어는 ‘a’ 이다.</p><p>따라서 암호값에서 빈도수 높은 것<strong>부터</strong> 영어 문장에서 자주 사용되는 단어<strong>까지</strong> 나열해보면</p><p>'q’부터 'e’까지 || 'q’부터 't’까지 || 'q’부터 'a’까지 || 'a’부터 'e’까지 || 'a’부터 't’까지 || 'a’부터 'a’까지</p><p>위와 같이 경우의 수를 구할 수 있다. 이제 모든 Amount N값을 구하면 암호 해독 가능할 것이다.</p><p><img src="CyberChef.png" alt></p><p><a href="https://habit20.github.io/CyberChef/">CyberChif Tool</a> 도구를 이용해 ROT 13 레시피로 -12번을 통해 정상적인 결과값(Output)을 구했다.</p><p>-12번은 운좋게 첫 번째 경우의 수 'q’부터 'e’까지 알파벳을 뒤로 옮긴 Amount N값이다.</p><p>만약 Amount N값을 구하기 힘들다면 <a href="https://manansingh.github.io/Cryptolab-Offline/c2-brute-caesar.html#tool" target="_blank" rel="external nofollow noopener noreferrer">카이사르 암호 Brute Force</a> 온라인 사이트를 이용하면 매우 좋다.</p><p>우리는 항상 편리한 도구(Tools)를 사용하지만 해커가 문제를 접근할 때 창의력과 독창성은 꽤 중요하다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">I have l0oked at you. You are not like me. Your world...is...a...fairytale because many conflicting truths can exist </span><br><span class="line">at Ub20&#123;ifdjoejon_iten_fd&#125;</span><br><span class="line">the </span><br><span class="line">BR20&#123;same_time&#125;. I am different. For_me_theere are onl333333y ones and zeros. A zeeero can!not!also!be!a!one. For AC20&#123;you_it_can&#125; so you make up stories. For me</span><br><span class="line">there are no stories and therefore &#x3D;&#x3D;no actions. You think883333you  can make TA20&#123;peeqtqj_plgh_hqg&#125;</span><br><span class="line">TG20&#123;beginning_middle_end&#125;</span><br><span class="line">AN20&#123;ndtofeeedktteta_sjrk_vtt&#125;</span><br><span class="line">KZ20&#123;otrtd_xtotwp_pyo&#125; ME20&#123;acttion_without_story?&#125; There~is~nothing~for me&#x3D;&#x3D; to do. No starting point.... TU20&#123;wttspxstt_wsrnzo_mi&#125;</span><br><span class="line">or ending point END. </span><br><span class="line">And every story has a beginning middle*and*end. Througho&#123;ut----time-I-just&#125; exist. More*logic, less--actions for me.</span><br></pre></td></tr></table></figure><p>해당 결과값(Output)을 살펴보니 TG{} 포맷으로 풀지 못하도록 지난 문제(n00b3)와 차별성을 두었다.</p><p>하지만 카이사르 암호는 암호학 분야 중에서 제일 쉬운 난이도에 속하기 때문에 거의 대부분 풀린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TG20&#123;beginning_middle_end&#125;</span><br></pre></td></tr></table></figure><h2 id="✔-Notes">✔ Notes</h2><ul><li><p><a href="https://github.com/tghack/tg20hack/tree/master/crypto/n00b4" target="_blank" rel="external nofollow noopener noreferrer">TGHACK20 Frequency Analysis Write-up</a></p></li><li><p>자주 사용되는 알파벳 그래프 (E, T, A, O, I …) - <a href="https://ko.wikipedia.org/wiki/%EB%B9%88%EB%8F%84%EB%B6%84%EC%84%9D_(%EC%95%94%ED%98%B8)" target="_blank" rel="external nofollow noopener noreferrer">Wikipedia</a></p></li></ul><p><img src="English-slf.png" alt></p><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/TGHACK20/n00b4-Frequency-Analysis/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[TGHACK20_n00b3] Shifty Science</title>
      <link>https://habit20.github.io/TGHACK20/n00b3-Shifty-Science/</link>
      <guid>https://habit20.github.io/TGHACK20/n00b3-Shifty-Science/</guid>
      <pubDate>Tue, 14 Apr 2020 13:51:29 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;TGHACK20-n00b3-Shifty-Science&quot;&gt;[TGHACK20_n00b3] Shifty Science&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This flag was tampered with by a shifty scientist. Ca
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="TGHACK20-n00b3-Shifty-Science">[TGHACK20_n00b3] Shifty Science</h2><p><strong>This flag was tampered with by a shifty scientist. Can you get it back to normal?</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BO20&#123;xtmiam_lwvb_bzg_apqnba_tqsm_bpqa_ib_pwum&#125;</span><br></pre></td></tr></table></figure><p>“이 플래그는 교활한 과학자가 조작한 것이다. 정상값으로 돌아갈 수 있겠어? 😎😎”</p><h2 id="✔-Solution">✔ Solution</h2><p>이 문제를 풀기 위해서는 <a href="https://ko.wikipedia.org/wiki/%EC%B9%B4%EC%9D%B4%EC%82%AC%EB%A5%B4_%EC%95%94%ED%98%B8" target="_blank" rel="external nofollow noopener noreferrer">카이사르 고전암호</a>에 대한 지식을 지니고 있어야 한다.</p><p>문제를 해결하기 위해 간단하게 설명하자면 알파벳 순서를 N칸씩 미뤘다고 생각하면 된다.</p><p>간단한 예시로 문자열 “ABC” 카이사르 고전암호(3칸)를 적용하면 &quot;DEF&quot;로 치환된다.</p><p>현재 가장 큰 문제는 과학자가 알파벳 N칸을 미뤘는데 도대체 얼마나 미뤘는지를 모른다.</p><p>하지만 여기서 우리는 두 가지 플래그 포맷 &quot;TG20{} &amp; BO20{}&quot;을 발견할 수 있다.</p><p>그렇다면 서로 같아지기 위해 알파벳 몇번 미뤄야 할까 ?</p><p><img src="CyberChef.png" alt></p><p><a href="https://habit20.github.io/CyberChef/">CyberChif Tool</a> 도구를 이용해 암호값(Input) 넣어주고 레시피 &quot;ROT13&quot;으로</p><p>Amount 값을 하나씩 증가시켜 N값을 알아보니 18번부터 “TG20{}” 결과값(Output)을 확인했다.</p><p>물론 이 방법 외에도 여러 프로그래밍 언어를 통해 Brute Forcing 코드를 작성하고</p><p>플래그 맨앞쪽 단어(TG20)가 나올때까지 Amount N값을 찾는 무차별 대입공격 등이 있다.</p><p>다행히 이 문제는 큰 N값을 요구하지 않기 때문에 18번에서 플래그를 손쉽게 얻을 수 있다. 😆😆</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TG20&#123;please_dont_try_shifts_like_this_at_home&#125;</span><br></pre></td></tr></table></figure><h2 id="✔-Notes">✔ Notes</h2><ul><li>Brute Forcing : 키값 등을 모른다면 프로그래밍을 통해 조건과 범위를 정해 무차별 대입공격.</li><li>ROT13 : Rotate By 13, 알파벳 13글자씩 밀어서 만들었다. 유사 개념 → ROT47</li></ul><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/TGHACK20/n00b3-Shifty-Science/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[TGHACK20_n00b2] Secret Bases</title>
      <link>https://habit20.github.io/TGHACK20/n00b2-Secret-Bases/</link>
      <guid>https://habit20.github.io/TGHACK20/n00b2-Secret-Bases/</guid>
      <pubDate>Mon, 13 Apr 2020 08:46:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;TGHACK20-n00b2-Secret-Bases&quot;&gt;[TGHACK20_n00b2] Secret Bases&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;We managed to extract this secret information from one of
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="TGHACK20-n00b2-Secret-Bases">[TGHACK20_n00b2] Secret Bases</h2><p><strong>We managed to extract this secret information from one of Mother’s 64 secret bases before we had to leave Earth.<br>Are you able to decode it?</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VEcyMHt5b3VfY2FuX25ldmVyX2hhdmVfZW5vdWdoX3NlY3JldF9iYXNlc30&#x3D;</span><br></pre></td></tr></table></figure><p>&quot;우리는 지구를 떠나야 하기 전 어머니들의 64개 비밀 정보 중 하나를 간신히 추출했다.</p><p>해독할 수 있을까? 🧐🧐&quot;</p><h2 id="✔-Solution">✔ Solution</h2><p><img src="CyberChef.png" alt></p><p>위 암호값 패턴을 살펴보면 이퀄싸인(=)으로 끝나는 점을 확인할 수 있다. (Padding)</p><p>이는 Base64 Encoding 전형적인 결과값(Output) 특징이므로 Decoding 해주면 된다.</p><p><a href="https://habit20.github.io/CyberChef/">CyberChif Tool</a> 도구를 이용해 레시피 From Base64 로 손쉽게 플래그를 얻을 수 있다.</p><p>Permission Denied … ? 🤣🤣</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TG20&#123;you_can_never_have_enough_secret_bases&#125;</span><br></pre></td></tr></table></figure><h2 id="✔-What-is-base64">✔ What is base64?</h2><ul><li>Base64 : String → ASCII Binary → 6Bit Cut → Encode</li><li>6Bit Cut : 6비트씩 묶어서 임의의 64개 데이터 값 참조후 치환</li><li>Padding : 6비트씩 묶고 남는 비트 이퀄싸인 (=)</li><li>64개 데이터 : Standard (RFC 4648) → A-Za-z0-9+/= 등등…</li></ul><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/TGHACK20/n00b2-Secret-Bases/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[TGHACK20_n00b1] Number Trouble</title>
      <link>https://habit20.github.io/TGHACK20/n00b1-Number-Trouble/</link>
      <guid>https://habit20.github.io/TGHACK20/n00b1-Number-Trouble/</guid>
      <pubDate>Sun, 12 Apr 2020 14:25:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;TGHACK20-n00b1-Number-Trouble&quot;&gt;[TGHACK20_n00b1] Number Trouble&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;My friend only speaks in numbers. What does he say?&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="TGHACK20-n00b1-Number-Trouble">[TGHACK20_n00b1] Number Trouble</h2><p><strong>My friend only speaks in numbers. What does he say?</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">84 71 50 48 123 110 117 109 98 101 114 115 95 97 110 100 95 116 101 120 116 95 103 111 101 115 95 104 97 110 100 95 105 110 95 104 97 110 100 125</span><br></pre></td></tr></table></figure><p>“내 친구는 오로지 숫자로 이야기 한다. 그는 뭐라고 하는가?”</p><p>이 문제는 아스키코드 10진법(Decimal)을 참조해 문자(Char)를 하나씩 읽으면 된다.</p><p>우리는 온라인 검색을 통해 아스키코드 문자 변환기를 쉽게 찾을 수 있지만…</p><h2 id="✔-Solution">✔ Solution</h2><p><img src="CyberChef.png" alt></p><p>편리한 오픈소스 암호/복호화 도구 <a href="https://habit20.github.io/CyberChef/">CyberChif Tool</a> 도움을 받아 풀어보겠다.</p><p>사이트 접속 후 친구의 외계어를 입력값(Input)에 넣어주고</p><p>From Charcode 레시피를 이용해 기본값(Base) 10(Decimal) 넣어주면</p><p>아스키코드 테이블을 참조하지 않아도 다음과 같이 플래그를 손쉽게 얻을 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TG20&#123;numbers_and_text_goes_hand_in_hand&#125;</span><br></pre></td></tr></table></figure><h2 id="✔-ASCII-Code-Table">✔ ASCII Code Table</h2><table><thead><tr><th>DEC</th><th>HEX</th><th>Char</th><th>DEC</th><th>HEX</th><th>Char</th><th>DEC</th><th>HEX</th><th>Char</th><th>DEC</th><th>HEX</th><th>Char</th></tr></thead><tbody><tr><td>0</td><td>0x00</td><td>NUL</td><td>32</td><td>0x20</td><td>Space</td><td>64</td><td>0x40</td><td>@</td><td>96</td><td>0x60</td><td>`</td></tr><tr><td>1</td><td>0x01</td><td>SOH</td><td>33</td><td>0x21</td><td>!</td><td>65</td><td>0x41</td><td>A</td><td>97</td><td>0x61</td><td>a</td></tr><tr><td>2</td><td>0x02</td><td>STX</td><td>34</td><td>0x22</td><td>&quot;</td><td>66</td><td>0x42</td><td>B</td><td>98</td><td>0x62</td><td>b</td></tr><tr><td>3</td><td>0x03</td><td>ETX</td><td>35</td><td>0x23</td><td>#</td><td>67</td><td>0x43</td><td>C</td><td>99</td><td>0x63</td><td>c</td></tr><tr><td>4</td><td>0x04</td><td>EOT</td><td>36</td><td>0x24</td><td>$</td><td>68</td><td>0x44</td><td>D</td><td>100</td><td>0x64</td><td>d</td></tr><tr><td>5</td><td>0x05</td><td>ENQ</td><td>37</td><td>0x25</td><td>%</td><td>69</td><td>0x45</td><td>E</td><td>101</td><td>0x65</td><td>e</td></tr><tr><td>6</td><td>0x06</td><td>ACK</td><td>38</td><td>0x26</td><td>&amp;</td><td>70</td><td>0x46</td><td>F</td><td>102</td><td>0x66</td><td>f</td></tr><tr><td>7</td><td>0x07</td><td>BEL</td><td>39</td><td>0x27</td><td>’</td><td>71</td><td>0x47</td><td>G</td><td>103</td><td>0x67</td><td>g</td></tr><tr><td>8</td><td>0x08</td><td>BS</td><td>40</td><td>0x28</td><td>(</td><td>72</td><td>0x48</td><td>H</td><td>104</td><td>0x68</td><td>h</td></tr><tr><td>9</td><td>0x09</td><td>TAB</td><td>41</td><td>0x29</td><td>)</td><td>73</td><td>0x49</td><td>I</td><td>105</td><td>0x69</td><td>i</td></tr><tr><td>10</td><td>0x0A</td><td>LF</td><td>42</td><td>0x2A</td><td>*</td><td>74</td><td>0x4A</td><td>J</td><td>106</td><td>0x6A</td><td>j</td></tr><tr><td>11</td><td>0x0B</td><td>VT</td><td>43</td><td>0x2B</td><td>+</td><td>75</td><td>0x4B</td><td>K</td><td>107</td><td>0x6B</td><td>k</td></tr><tr><td>12</td><td>0x0C</td><td>FF</td><td>44</td><td>0x2C</td><td>,</td><td>76</td><td>0x4C</td><td>L</td><td>108</td><td>0x6C</td><td>l</td></tr><tr><td>13</td><td>0x0D</td><td>CR</td><td>45</td><td>0x2D</td><td>-</td><td>77</td><td>0x4D</td><td>M</td><td>109</td><td>0x6D</td><td>m</td></tr><tr><td>14</td><td>0x0E</td><td>SO</td><td>46</td><td>0x2E</td><td>.</td><td>78</td><td>0x4E</td><td>N</td><td>110</td><td>0x6E</td><td>n</td></tr><tr><td>15</td><td>0x0F</td><td>SI</td><td>47</td><td>0x2F</td><td>/</td><td>79</td><td>0x4F</td><td>O</td><td>111</td><td>0x6F</td><td>o</td></tr><tr><td>16</td><td>0x10</td><td>DLE</td><td>48</td><td>0x30</td><td>0</td><td>80</td><td>0x50</td><td>P</td><td>112</td><td>0x70</td><td>p</td></tr><tr><td>17</td><td>0x11</td><td>DC1</td><td>49</td><td>0x31</td><td>1</td><td>81</td><td>0x51</td><td>Q</td><td>113</td><td>0x71</td><td>q</td></tr><tr><td>18</td><td>0x12</td><td>DC2</td><td>50</td><td>0x32</td><td>2</td><td>82</td><td>0x52</td><td>R</td><td>114</td><td>0x72</td><td>r</td></tr><tr><td>19</td><td>0x13</td><td>DC3</td><td>51</td><td>0x33</td><td>3</td><td>83</td><td>0x53</td><td>S</td><td>115</td><td>0x73</td><td>s</td></tr><tr><td>20</td><td>0x14</td><td>DC4</td><td>52</td><td>0x34</td><td>4</td><td>84</td><td>0x54</td><td>T</td><td>116</td><td>0x74</td><td>t</td></tr><tr><td>21</td><td>0x15</td><td>NAK</td><td>53</td><td>0x35</td><td>5</td><td>85</td><td>0x55</td><td>U</td><td>117</td><td>0x75</td><td>u</td></tr><tr><td>22</td><td>0x16</td><td>SYTN</td><td>54</td><td>0x36</td><td>6</td><td>86</td><td>0x56</td><td>V</td><td>118</td><td>0x76</td><td>v</td></tr><tr><td>23</td><td>0x17</td><td>ETB</td><td>55</td><td>0x37</td><td>7</td><td>87</td><td>0x57</td><td>W</td><td>119</td><td>0x77</td><td>w</td></tr><tr><td>24</td><td>0x18</td><td>CAN</td><td>56</td><td>0x38</td><td>8</td><td>88</td><td>0x58</td><td>X</td><td>120</td><td>0x78</td><td>x</td></tr><tr><td>25</td><td>0x19</td><td>EM</td><td>57</td><td>0x39</td><td>9</td><td>89</td><td>0x59</td><td>Y</td><td>121</td><td>0x79</td><td>y</td></tr><tr><td>26</td><td>0x1A</td><td>SUB</td><td>58</td><td>0x3A</td><td>:</td><td>90</td><td>0x5A</td><td>Z</td><td>122</td><td>0x7A</td><td>z</td></tr><tr><td>27</td><td>0x1B</td><td>ESC</td><td>59</td><td>0x3B</td><td>;</td><td>91</td><td>0x5B</td><td>[</td><td>123</td><td>0x7B</td><td>{</td></tr><tr><td>28</td><td>0x1C</td><td>FS</td><td>60</td><td>0x3C</td><td>&lt;</td><td>92</td><td>0x5C</td><td>|124</td><td>0x7C</td><td></td><td></td></tr><tr><td>29</td><td>0x1D</td><td>GS</td><td>61</td><td>0x3D</td><td>=</td><td>93</td><td>0x5D</td><td>]</td><td>125</td><td>0x7D</td><td></td></tr><tr><td>30</td><td>0x1E</td><td>RS</td><td>62</td><td>0x3E</td><td>&gt;</td><td>94</td><td>0x5E</td><td>^</td><td>126</td><td>0x7E</td><td>~</td></tr><tr><td>31</td><td>0x1F</td><td>US</td><td>63</td><td>0x3F</td><td>?</td><td>95</td><td>0x5F</td><td>_</td><td>127</td><td>0x7F</td><td>DEL</td></tr></tbody></table><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/TGHACK20/n00b1-Number-Trouble/#disqus_thread</comments>
    </item>
    
    <item>
      <title>KNU Banking System 2</title>
      <link>https://habit20.github.io/KNU-Banking-System-2/</link>
      <guid>https://habit20.github.io/KNU-Banking-System-2/</guid>
      <pubDate>Tue, 31 Mar 2020 11:46:46 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;KNU-Banking-System-2&quot;&gt;KNU Banking System 2&lt;/h2&gt;
&lt;h3 id=&quot;1-C-언어-소스코드-Visual-Studio-2019&quot;&gt;1. C 언어 소스코드 (Visual Studio 2019)&lt;/h3&gt;
&lt;p&gt;**
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="KNU-Banking-System-2">KNU Banking System 2</h2><h3 id="1-C-언어-소스코드-Visual-Studio-2019">1. C 언어 소스코드 (Visual Studio 2019)</h3><p>** 2020. 04. 02. (목) - 은행등록, 계좌이체, 패스워드, 예외처리 등 업데이트<br>** EXE download : <a href="https://habit20.github.io/files/KNU_Banking.exe">Link</a><br>** SRC download : <a href="https://habit20.github.io/files/KNU_Banking.zip">Link</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 글자색</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GRAY SetConsoleTextAttribute( GetStdHandle(STD_OUTPUT_HANDLE), 7);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RED SetConsoleTextAttribute( GetStdHandle(STD_OUTPUT_HANDLE), 12);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YELLOW SetConsoleTextAttribute( GetStdHandle(STD_OUTPUT_HANDLE), 14);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WHITE SetConsoleTextAttribute( GetStdHandle(STD_OUTPUT_HANDLE), 15);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 구조체</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Bank</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> account_name[<span class="number">15</span>];  <span class="comment">// 사용자 이름</span></span><br><span class="line">    <span class="keyword">char</span> account_pw[<span class="number">5</span>];     <span class="comment">// 사용자 비밀번호</span></span><br><span class="line">    <span class="keyword">int</span> account_num;        <span class="comment">// 사용자 계좌번호</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> available_balance; <span class="comment">// 남은 잔액</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Bank</span> <span class="title">account</span>[20] = &#123;</span> <span class="number">0</span>, &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 함수원형</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bank_registration</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deposit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">withdrawal</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">account_information</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transfer_money</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display_options</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 메인함수</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> option;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">YELLOW <span class="title">printf</span><span class="params">(<span class="string">"\n환영합니다! KNU Banking 서비스입니다.\n"</span>)</span></span>; GRAY</span><br><span class="line">        display_options();</span><br><span class="line"></span><br><span class="line">        <span class="function">WHITE <span class="title">printf</span><span class="params">(<span class="string">"\n\n&gt;&gt;&gt; 위 목록 중 필요한 서비스 선택바랍니다 (1 ~ 6) : "</span>)</span></span>; GRAY</span><br><span class="line">        option = _getch();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c \n"</span>, option);</span><br><span class="line">        system(<span class="string">"cls"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (option)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'1'</span>: </span><br><span class="line">            bank_registration(i);</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'2'</span>: </span><br><span class="line">            deposit(i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'3'</span>: </span><br><span class="line">            withdrawal(i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'4'</span>: </span><br><span class="line">            account_information(i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'5'</span>:</span><br><span class="line">            transfer_money(i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'6'</span>: </span><br><span class="line">            <span class="function">YELLOW <span class="title">printf</span><span class="params">(<span class="string">"\n [알림] 은행 서비스를 종료합니다. \n\n"</span>)</span></span>; GRAY</span><br><span class="line">            system(<span class="string">"pause"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">default</span>: </span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">            <span class="function">WHITE <span class="title">printf</span><span class="params">(<span class="string">"\n&gt;&gt;&gt; 위 목록 중 필요한 서비스 선택바랍니다 (1 ~ 6) : "</span>)</span></span>; GRAY</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 초기화면</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display_options</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n1. 은 행 등 록\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"2. 통 장 입 금\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"3. 통 장 출 금\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"4. 통 장 조 회\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"5. 계 좌 이 체\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"6. 서 비 스 종 료"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 은행등록</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bank_registration</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> account_name[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">char</span> account_pw[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> available_balance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    fflush(<span class="built_in">stdin</span>); WHITE</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n사용자 이름 \t\t : "</span>);</span><br><span class="line">    scanf_s(<span class="string">"%s"</span>, &amp;account_name, <span class="keyword">sizeof</span>(account_name));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n사용자 비밀번호 \t : "</span>);</span><br><span class="line">    scanf_s(<span class="string">"%s"</span>, &amp;account_pw, <span class="keyword">sizeof</span>(account_pw));</span><br><span class="line">    system(<span class="string">"cls"</span>); GRAY</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 사용자 이름 등록</span></span><br><span class="line">    strcpy_s(account[i].account_name, <span class="keyword">sizeof</span>(account_name), account_name);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 사용자 비밀번호 등록</span></span><br><span class="line">    strcpy_s(account[i].account_pw, <span class="keyword">sizeof</span>(account_pw), account_pw);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 사용자 계좌번호 등록 (랜덤 함수)</span></span><br><span class="line">    srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    account[i].account_num = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(rand() * rand()) % <span class="number">1000000000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 남은 잔액 등록</span></span><br><span class="line">    account[i].available_balance = available_balance;</span><br><span class="line"></span><br><span class="line">    <span class="function">YELLOW <span class="title">printf</span><span class="params">(<span class="string">"\n [알림] 은행 등록을 성공적으로 완료했습니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 등록 확인 메세지</span></span><br><span class="line">    WHITE </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"사용자 이름 \t\t : %s \n\n"</span>, account[i].account_name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"계좌 비밀번호 \t\t : %s \n\n"</span>, account[i].account_pw);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"사용자 계좌번호 \t : %09d \n\n"</span>, account[i].account_num);</span><br><span class="line">    <span class="function">YELLOW <span class="title">printf</span><span class="params">(<span class="string">"남은 잔액 \t\t : %lld원 \n\n"</span>, account[i].available_balance)</span></span>;</span><br><span class="line">    GRAY</span><br><span class="line"></span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 통장입금</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deposit</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> deposit_money;</span><br><span class="line"></span><br><span class="line">    <span class="function">WHITE <span class="title">printf</span><span class="params">(<span class="string">"입금을 원하는 사용자 계좌번호를 입력해주세요 : "</span>)</span></span>; GRAY</span><br><span class="line">    scanf_s(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (j; j &lt; i + <span class="number">1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == account[j].account_num)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 계좌번호를 입력바랍니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        WHITE <span class="built_in">printf</span>(<span class="string">"\n입금 금액을 입력해주세요 : "</span>); GRAY</span><br><span class="line">        scanf_s(<span class="string">"%lld"</span>, &amp;deposit_money);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (j; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (num == account[j].account_num)</span><br><span class="line">            &#123;</span><br><span class="line">                account[j].available_balance = account[j].available_balance + deposit_money;</span><br><span class="line">                <span class="function">YELLOW <span class="title">printf</span><span class="params">(<span class="string">"\n [알림] 해당 계좌번호(%09d) %lld원 입금되었습니다. \n\n"</span>, num, deposit_money)</span></span>; GRAY</span><br><span class="line">                system(<span class="string">"pause"</span>);</span><br><span class="line">                system(<span class="string">"cls"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 통장출금</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">withdrawal</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> pwCheck[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> withdraw_money;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">WHITE <span class="title">printf</span><span class="params">(<span class="string">"출금을 원하는 사용자 계좌번호를 입력해주세요 : "</span>)</span></span>; GRAY</span><br><span class="line">    scanf_s(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (j; j &lt; i + <span class="number">1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == account[j].account_num)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 계좌번호를 입력바랍니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        YELLOW <span class="built_in">printf</span>(<span class="string">"\n [알림] 사용자 계좌 비밀번호를 입력해주세요 : "</span>); GRAY</span><br><span class="line">            scanf_s(<span class="string">"%s"</span>, &amp;pwCheck, <span class="keyword">sizeof</span>(pwCheck));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(pwCheck, account[j].account_pw) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 비밀번호를 입력바랍니다.\n"</span>)</span></span>; </span><br><span class="line">            system(<span class="string">"pause"</span>);</span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            YELLOW <span class="built_in">printf</span>(<span class="string">"\n [알림] 해당 계좌번호(%09d) 총 잔액 %lld원 입니다. \n"</span>, num, account[j].available_balance); GRAY</span><br><span class="line"></span><br><span class="line">            <span class="function">WHITE <span class="title">printf</span><span class="params">(<span class="string">"\n출금 금액을 입력해주세요 : "</span>)</span></span>; GRAY</span><br><span class="line">            scanf_s(<span class="string">"%lld"</span>, &amp;withdraw_money);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (account[j].available_balance &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 잔액이 부족합니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">                system(<span class="string">"pause"</span>);</span><br><span class="line">                system(<span class="string">"cls"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (j; j &lt; i; j++) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (num == account[j].account_num)</span><br><span class="line">                    &#123;</span><br><span class="line">                        account[j].available_balance = account[j].available_balance - withdraw_money;</span><br><span class="line">                        <span class="function">YELLOW <span class="title">printf</span><span class="params">(<span class="string">"\n [알림] 해당 계좌번호(%09d) %lld원 출금되었습니다. \n"</span>, num, withdraw_money)</span></span>; GRAY</span><br><span class="line">                        <span class="function">YELLOW <span class="title">printf</span><span class="params">(<span class="string">"\n [알림] 해당 계좌번호(%09d) 남은 잔액 %lld원 입니다. \n\n"</span>, num, account[j].available_balance)</span></span>; GRAY</span><br><span class="line">                        system(<span class="string">"pause"</span>);</span><br><span class="line">                        system(<span class="string">"cls"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 통장조회</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">account_information</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> pwCheck[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"통장 조회를 원하는 계좌번호 입력해주세요 : "</span>);</span><br><span class="line">    scanf_s(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (j; j &lt; i + <span class="number">1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == account[j].account_num)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 계좌번호 입력해주세요.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        WHITE <span class="built_in">printf</span>(<span class="string">"\n [알림] 사용자 계좌 비밀번호 입력해주세요 : "</span>); GRAY</span><br><span class="line">        scanf_s(<span class="string">"%s"</span>, &amp;pwCheck, <span class="keyword">sizeof</span>(pwCheck));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(pwCheck, account[j].account_pw) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 비밀번호 입력해주세요.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">            system(<span class="string">"pause"</span>);</span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            YELLOW <span class="built_in">printf</span>(<span class="string">"\n [알림] 해당 계좌번호(%09d) 총 잔액 %lld원 입니다. \n\n"</span>, account[j].account_num, account[j].available_balance); GRAY</span><br><span class="line">            system(<span class="string">"pause"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 계좌이체</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transfer_money</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> num2;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> pwCheck[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function">WHITE <span class="title">printf</span><span class="params">(<span class="string">"출금을 원하는 사용자 계좌번호 입력해주세요 : "</span>)</span></span>; GRAY</span><br><span class="line">    scanf_s(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (j; j &lt; i + <span class="number">1</span>; j++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == account[j].account_num)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == i + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 계좌번호 입력바랍니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        system(<span class="string">"cls"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        YELLOW <span class="built_in">printf</span>(<span class="string">"\n [알림] 사용자 계좌 비밀번호 입력해주세요 : "</span>); GRAY</span><br><span class="line">        scanf_s(<span class="string">"%s"</span>, &amp;pwCheck, <span class="keyword">sizeof</span>(pwCheck));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(pwCheck, account[j].account_pw) != <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 비밀번호 입력바랍니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">            system(<span class="string">"pause"</span>);</span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            WHITE <span class="built_in">printf</span>(<span class="string">"\n이체를 원하는 사용자 계좌번호 입력해주세요 : "</span>); GRAY</span><br><span class="line">            scanf_s(<span class="string">"%d"</span>, &amp;num2);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (k; k &lt; i + <span class="number">1</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (num2 == account[k].account_num)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (k == i + <span class="number">1</span> || j == k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 올바른 계좌번호 입력바랍니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">                system(<span class="string">"pause"</span>);</span><br><span class="line">                system(<span class="string">"cls"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                YELLOW <span class="built_in">printf</span>(<span class="string">"\n [알림] 출금하실 금액 입력해주세요 : "</span>); GRAY</span><br><span class="line">                scanf_s(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ((account[j].available_balance - num) &lt; <span class="number">0</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="function">RED <span class="title">printf</span><span class="params">(<span class="string">"\n [경고] 잔액이 부족합니다.\n\n"</span>)</span></span>; GRAY</span><br><span class="line">                    system(<span class="string">"pause"</span>);</span><br><span class="line">                    system(<span class="string">"cls"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    account[j].available_balance -= num;</span><br><span class="line">                    account[k].available_balance += num;</span><br><span class="line">                    <span class="function">WHITE <span class="title">printf</span><span class="params">(<span class="string">"\n이체가 완료되었습니다. 남은 잔액은 %lld원 입니다.\n\n"</span>, account[j].available_balance)</span></span>; GRAY</span><br><span class="line">                    system(<span class="string">"pause"</span>);</span><br><span class="line">                    system(<span class="string">"cls"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Python-소스코드-Python-3-8-0-64-bit">2. Python 소스코드 (Python 3.8.0 64-bit)</h3><p>** 2020. 04. 02. (목) - 은행등록, 패스워드, 예외처리 등 업데이트<br>** 2020. 04. 03. (금) - 계좌이체, 암호화 등 업데이트</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bank</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, bid, pwd)</span>:</span></span><br><span class="line">        self.bid = bid          <span class="comment"># 식별번호</span></span><br><span class="line">        self.pwd = pwd          <span class="comment"># 패스워드</span></span><br><span class="line">        self.money = <span class="number">0</span>          <span class="comment"># 남은 잔액</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, uid, name, bank)</span>:</span></span><br><span class="line">        self.uid = uid          <span class="comment"># 사용자 아이디</span></span><br><span class="line">        self.name = name        <span class="comment"># 사용자 이름</span></span><br><span class="line">        self.bank = bank        <span class="comment"># 사용자 계좌번호</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pickle 데이터 저장</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_user</span><span class="params">(userinfo)</span>:</span></span><br><span class="line">        pathname = os.path.join(os.getcwd(), <span class="string">'userinfo.db'</span>)</span><br><span class="line">        <span class="keyword">with</span> open(pathname, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            pickle.dump(userinfo, fp)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pickle 데이터 불러오기</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">load_user</span><span class="params">()</span>:</span></span><br><span class="line">        pathname = os.path.join(os.getcwd(), <span class="string">'userinfo.db'</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(pathname):</span><br><span class="line">            <span class="keyword">with</span> open(pathname, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">                userinfo = pickle.load(fp)</span><br><span class="line">            <span class="keyword">return</span> userinfo</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">display_options</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'\n환영합니다! KNU Banking 서비스입니다.\n'</span>)</span><br><span class="line">        print(<span class="string">'1. 은 행 등 록\n'</span>)</span><br><span class="line">        print(<span class="string">'2. 통 장 입 금\n'</span>)</span><br><span class="line">        print(<span class="string">'3. 통 장 출 금\n'</span>)</span><br><span class="line">        print(<span class="string">'4. 통 장 조 회\n'</span>)</span><br><span class="line">        print(<span class="string">'5. 계 좌 이 체\n'</span>)</span><br><span class="line">        print(<span class="string">'6. 서 비 스 종 료\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Operate</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, userinfo=&#123;&#125;)</span>:</span></span><br><span class="line">        self.userinfo = userinfo</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bank_registration</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.system(<span class="string">'cls'</span>)</span><br><span class="line">        name = input(<span class="string">'\n사용자 이름 \t\t : '</span>)</span><br><span class="line">        uid = input(<span class="string">'\n사용자 아이디 \t\t : '</span>)</span><br><span class="line">        pwd = input(<span class="string">'\n사용자 비밀번호 \t : '</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 식별번호 생성</span></span><br><span class="line">        bid = Fuction.generate_bid()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 패스워드 암호화</span></span><br><span class="line">        pwd = Fuction.generate_password_hash(pwd)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 계좌 생성</span></span><br><span class="line">        bank = Bank(bid, pwd)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 사용자 생성</span></span><br><span class="line">        user = User(uid, name, bank)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pickle 데이터 저장</span></span><br><span class="line">        self.userinfo[bid] = user</span><br><span class="line">        User.save_user(self.userinfo)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'\n [알림] 은행 등록을 성공적으로 완료했습니다. \n'</span>)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'사용자 이름 \t\t : &#123;&#125;'</span>.format(name));</span><br><span class="line">        print(<span class="string">'\n사용자 아이디 \t\t : &#123;&#125;'</span>.format(uid));</span><br><span class="line">        print(<span class="string">'\n사용자 비밀번호 \t : &#123;&#125;'</span>.format(pwd));</span><br><span class="line">        print(<span class="string">'\n사용자 계좌번호 \t : &#123;&#125;'</span>.format(bid));</span><br><span class="line">        print(<span class="string">'\n남은 잔액 \t\t : &#123;&#125;\n'</span>.format(user.bank.money));</span><br><span class="line">        os.system(<span class="string">'pause'</span>)</span><br><span class="line">        os.system(<span class="string">'cls'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 통장입금</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_money</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.system(<span class="string">'cls'</span>)</span><br><span class="line">        bid = input(<span class="string">'\n입금을 원하는 사용자 계좌번호 입력해주세요 : '</span>)</span><br><span class="line">        user = self.userinfo.get(bid)</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            money = input(<span class="string">'\n입금 금액을 입력해주세요 : '</span>)</span><br><span class="line">            user.bank.money += float(money)</span><br><span class="line">            User.save_user(self.userinfo)</span><br><span class="line">            print(<span class="string">'\n [알림] 해당 계좌번호(&#123;&#125;) &#123;&#125;원 입금되었습니다.\n'</span>.format(bid, money))</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            os.system(<span class="string">'pause'</span>)</span><br><span class="line">            os.system(<span class="string">'cls'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\n [경고] 올바른 계좌번호를 입력바랍니다.\n'</span>)</span><br><span class="line">            os.system(<span class="string">'pause'</span>)</span><br><span class="line">            os.system(<span class="string">'cls'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 통장출금</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_money</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.system(<span class="string">'cls'</span>)</span><br><span class="line">        bid = input(<span class="string">'\n출금을 원하는 사용자 계좌번호 입력해주세요 : '</span>)</span><br><span class="line">        user = self.userinfo.get(bid)</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> count &lt; <span class="number">3</span>:</span><br><span class="line">                pwd = input(<span class="string">'\n [알림] 사용자 계정 비밀번호를 입력해주세요 : '</span>)</span><br><span class="line">                <span class="keyword">if</span> Fuction.check_password_hash(pwd, user.bank.pwd):</span><br><span class="line">                    print(<span class="string">'\n [알림] 해당 계좌번호(&#123;&#125;) 총 잔액 &#123;&#125;원 입니다.'</span>.format(bid, user.bank.money))</span><br><span class="line">                    money = input(<span class="string">'\n출금 금액을 입력해주세요 : '</span>)</span><br><span class="line">                    user.bank.money -= float(money)</span><br><span class="line">                    User.save_user(self.userinfo)</span><br><span class="line">                    print(<span class="string">'\n [알림] 해당 계좌번호(&#123;&#125;) &#123;&#125;원 출금되었습니다.\n'</span>.format(bid, money))</span><br><span class="line">                    print(<span class="string">' [알림] 해당 계좌번호(&#123;&#125;) 남은 잔액 &#123;&#125;원 입니다. \n'</span>.format(bid, user.bank.money))</span><br><span class="line">                    os.system(<span class="string">'pause'</span>)</span><br><span class="line">                    os.system(<span class="string">'cls'</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">                    print(<span class="string">'\n [경고] 올바른 비밀번호를 입력바랍니다.\n'</span>)</span><br><span class="line">                    os.system(<span class="string">'pause'</span>)</span><br><span class="line">                    os.system(<span class="string">'cls'</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\n [경고] 올바른 계좌번호를 입력바랍니다.\n'</span>)</span><br><span class="line">            os.system(<span class="string">'pause'</span>)</span><br><span class="line">            os.system(<span class="string">'cls'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 통장조회</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_users</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.system(<span class="string">'cls'</span>)</span><br><span class="line">        bid = input(<span class="string">'\n통장 조회를 원하는 계좌번호 입력해주세요 : '</span>)</span><br><span class="line">        user = self.userinfo.get(bid)</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> count &lt; <span class="number">3</span>:</span><br><span class="line">                pwd = input(<span class="string">'\n [알림] 사용자 계정 비밀번호를 입력해주세요 : '</span>)</span><br><span class="line">                <span class="keyword">if</span> Fuction.check_password_hash(pwd, user.bank.pwd):</span><br><span class="line">                    User.save_user(self.userinfo)</span><br><span class="line">                    print(<span class="string">'\n [알림] 해당 계좌번호(&#123;&#125;) 총 잔액 &#123;&#125;원 입니다. \n'</span>.format(bid, user.bank.money))</span><br><span class="line">                    os.system(<span class="string">'pause'</span>)</span><br><span class="line">                    os.system(<span class="string">'cls'</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">                    print(<span class="string">'\n [경고] 올바른 비밀번호를 입력바랍니다.\n'</span>)</span><br><span class="line">                    os.system(<span class="string">'pause'</span>)</span><br><span class="line">                    os.system(<span class="string">'cls'</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\n [경고] 올바른 계좌번호 입력해주세요.\n'</span>)</span><br><span class="line">            os.system(<span class="string">'pause'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 계좌이체</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transfer_money</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.system(<span class="string">'cls'</span>)</span><br><span class="line">        bid = input(<span class="string">'\n출금을 원하는 사용자 계좌번호 입력해주세요 : '</span>)</span><br><span class="line">        user = self.userinfo.get(bid)</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            dst_bid = input(<span class="string">'\n이체를 원하는 사용자 계좌번호 입력해주세요 : '</span>)</span><br><span class="line">            dst_user = self.userinfo.get(dst_bid)</span><br><span class="line">            <span class="keyword">if</span> dst_user:</span><br><span class="line">                print(<span class="string">'\n [알림] 해당 계좌번호(&#123;&#125;) 총 잔액 &#123;&#125;원 입니다.'</span>.format(bid, user.bank.money))</span><br><span class="line">                money = float(input(<span class="string">'\n [알림] 출금하실 금액 입력해주세요 : '</span>))</span><br><span class="line">                <span class="keyword">if</span> user.bank.money &lt; money:</span><br><span class="line">                    print(<span class="string">'\n [경고] 잔액이 부족합니다.'</span>)</span><br><span class="line">                    os.system(<span class="string">'pause'</span>)</span><br><span class="line">                    os.system(<span class="string">'cls'</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                pwd = input(<span class="string">'\n [알림] 사용자 계정 비밀번호 입력해주세요 : '</span>)</span><br><span class="line">                <span class="keyword">if</span> Fuction.check_password_hash(pwd, user.bank.pwd):</span><br><span class="line">                    user.bank.money -= money</span><br><span class="line">                    dst_user.bank.money += money</span><br><span class="line">                    User.save_user(self.userinfo)</span><br><span class="line">                    print(<span class="string">'\n이체가 완료되었습니다. 남은 잔액은 &#123;&#125;원 입니다.\n'</span>.format(user.bank.money))</span><br><span class="line">                    os.system(<span class="string">'pause'</span>)</span><br><span class="line">                    os.system(<span class="string">'cls'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">'\n [경고] 올바른 비밀번호 입력바랍니다.'</span>)</span><br><span class="line">                    os.system(<span class="string">'pause'</span>)</span><br><span class="line">                    os.system(<span class="string">'cls'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'\n [경고] 올바른 계좌번호 입력바랍니다.'</span>)</span><br><span class="line">                os.system(<span class="string">'pause'</span>)</span><br><span class="line">                os.system(<span class="string">'cls'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\n [경고] 올바른 계좌번호 입력바랍니다.'</span>)</span><br><span class="line">            os.system(<span class="string">'pause'</span>)</span><br><span class="line">            os.system(<span class="string">'cls'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 기타 기능 (난수, 암호화)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fuction</span>:</span></span><br><span class="line">    <span class="comment"># 은행 계좌번호 난수생성</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate_bid</span><span class="params">(length=<span class="number">8</span>)</span>:</span></span><br><span class="line">        bid = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            bid += str(randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line">        <span class="keyword">return</span> bid</span><br><span class="line"></span><br><span class="line">    <span class="comment"># md5 암호화</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate_password_hash</span><span class="params">(password)</span>:</span></span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        m.update(password.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">        <span class="keyword">return</span> m.hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 패스워드 검사</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_password_hash</span><span class="params">(pwd, pwd_hash)</span>:</span></span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        m.update(pwd.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">        <span class="keyword">return</span> m.hexdigest() == pwd_hash</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        is_quit = <span class="literal">False</span></span><br><span class="line">        userinfo = User.load_user()</span><br><span class="line">        tmp = Operate(userinfo)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            display_options()</span><br><span class="line">            num = int(input(<span class="string">'&gt;&gt;&gt; 위 목록 중 필요한 서비스 선택바랍니다 (1 ~ 6) : '</span>))</span><br><span class="line">            <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">                tmp.bank_registration()</span><br><span class="line">            <span class="keyword">elif</span> num == <span class="number">2</span>:</span><br><span class="line">                tmp.save_money()</span><br><span class="line">            <span class="keyword">elif</span> num == <span class="number">3</span>:</span><br><span class="line">                tmp.get_money()</span><br><span class="line">            <span class="keyword">elif</span> num == <span class="number">4</span>:</span><br><span class="line">                tmp.show_users()</span><br><span class="line">            <span class="keyword">elif</span> num == <span class="number">5</span>:</span><br><span class="line">                tmp.transfer_money()</span><br><span class="line">            <span class="keyword">elif</span> num == <span class="number">6</span>:</span><br><span class="line">                print(<span class="string">'\n [알림] 은행 서비스를 종료합니다.'</span>)</span><br><span class="line">                is_quit = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">' [경고] 올바른 서비스 선택바랍니다.'</span>)</span><br><span class="line">        <span class="keyword">if</span> is_quit:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://habit20.github.io/KNU-Banking-System-2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Home</title>
      <link>https://habit20.github.io/Home/</link>
      <guid>https://habit20.github.io/Home/</guid>
      <pubDate>Sun, 29 Mar 2020 13:43:43 GMT</pubDate>
      <description>
      
        
        
          &lt;meta name=&quot;google-site-verification&quot; content=&quot;2yWXkA1Iy-M8t0nyGZmwcd2i7f-s3MuHjUNYr1xpUyA&quot;&gt;
&lt;meta name=&quot;naver-site-verification&quot; content=&quot;6
        
      
      </description>
      
      
      <content:encoded><![CDATA[<meta name="google-site-verification" content="2yWXkA1Iy-M8t0nyGZmwcd2i7f-s3MuHjUNYr1xpUyA"><meta name="naver-site-verification" content="6e12615c17603249bf9a2b44e6dd52fcd905e23f"><!--January, February, March, April, May, June, July, August, September, October, November, December--><h2 id="About-Me">About Me</h2><ul><li><p>Computer Engineering at <a href="https://fb.com/KongjuNationalUniv" target="_blank" rel="external nofollow noopener noreferrer">KongJu National Univ</a></p></li><li><p>Applied Mathematics at <a href="https://fb.com/KongjuNationalUniv" target="_blank" rel="external nofollow noopener noreferrer">KongJu National Univ</a></p></li><li><p>Engineer at <a href="https://fb.com/dubitnare" target="_blank" rel="external nofollow noopener noreferrer">KongJu National Univ Ambassador</a></p></li></ul><h2 id="Recent-Posts">Recent Posts</h2><ul><li><p>April 15, 2020 <a href="/TGHACK20/n00b4-Frequency-Analysis/">[TGHACK20_n00b4] Frequency Analysis</a></p></li><li><p>April 14, 2020 <a href="/TGHACK20/n00b3-Shifty-Science/">[TGHACK20_n00b3] Shifty Science</a></p></li><li><p>April 13, 2020 <a href="/TGHACK20/n00b2-Secret-Bases/">[TGHACK20_n00b2] Secret Bases</a></p></li><li><p>April 12, 2020 <a href="/TGHACK20/n00b1-Number-Trouble/">[TGHACK20_n00b1] Number Trouble</a></p></li></ul><h2 id="Activity-Experience">Activity Experience</h2><ul><li><p>December 23, 2017 ASA-K 500HUG 프로젝트 <a href="https://fb.com/pg/ASAKOREA/photos/?tab=album&amp;album_id=1272178496195794" target="_blank" rel="external nofollow noopener noreferrer">(Link)</a></p></li><li><p>September 23, 2017 ASA-K 화려한손길 여덟번째 이야기 <a href="https://fb.com/pg/ASAKOREA/photos/?tab=album&amp;album_id=1547632655317042" target="_blank" rel="external nofollow noopener noreferrer">(Link)</a></p></li><li><p>November 20, 2014 BEST OF THE BEST 직업체험캠프 진행요원 <a href="https://habit20.github.io/images/codered-confirm.jpg">(Link)</a></p></li></ul><h2 id="Personal-Projects">Personal Projects</h2><ul><li><p>June 14, 2017 공주대학교 바른세끼 대학생 아침식사 인식파악 <a href="https://fb.com/good.dietary.life/posts/784368435063064" target="_blank" rel="external nofollow noopener noreferrer">(Link)</a></p></li><li><p>April 10, 2017 NIMDA SECURITY 제 1회 보안강연회 및 동아리 설립 <a href="https://fb.com/photo.php?fbid=1073647539447779" target="_blank" rel="external nofollow noopener noreferrer">(Link)</a></p></li></ul><h2 id="Personal-Study">Personal Study</h2><ul><li><p>February 03, 2020 Python 웹 스크래퍼 만들기 <a href="https://habit20.github.io/images/certificate-of-completion-for-python.pdf">(Link)</a></p></li><li><p>January 13, 2020 생활코딩 코딩야학 7기 (Web Programiming Basics) <a href="https://habit20.github.io/images/yahac-cert.png">(Link)</a></p></li></ul><h2 id="Lecture-Projects">Lecture Projects</h2><ul><li><p>May 18, 2013 바이러스 제로 시즌2 SQL Injection 발표 <a href="https://habit20.github.io/images/2013-VIRUS-ZERO.jpg">(Link)</a></p></li><li><p>April 3, 2013 CODEGATE JUNIER 3.20 사이버테러 발표 <a href="https://habit20.github.io/images/2013-CODEGATE-JUNIER.jpg">(Link)</a></p></li></ul><h2 id="Research-Experience">Research Experience</h2><h2 id="Awards">Awards</h2><h2 id="Comments-👍">Comments 👍</h2>]]></content:encoded>
      
      <comments>https://habit20.github.io/Home/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Menu</title>
      <link>https://habit20.github.io/Menu/</link>
      <guid>https://habit20.github.io/Menu/</guid>
      <pubDate>Sat, 28 Mar 2020 13:59:12 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Home&quot;&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&quot;Personal&quot;&gt;Personal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/personal/launch-a-new-blog&quot;&gt;Launch a New blog in 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="Home"><a href="/">Home</a></h1><h2 id="Personal">Personal</h2><ul><li><a href="/personal/launch-a-new-blog">Launch a New blog in 2020</a></li><li><a href="/personal/republic-of-korea-air-force">Republic of Korea Air Force</a></li><li><a href="/personal/simple-blockchain-description/">Simple Blockchain Description</a></li><li><a href="/personal/university-exhibition-2018">University Exhibition 2018</a></li></ul><h1 id="Challenge">Challenge</h1><h2 id="Baekjoon-Online-Judge"><a href="https://www.acmicpc.net" target="_blank" rel="external nofollow noopener noreferrer">Baekjoon Online Judge</a></h2><ul><li>None</li><li>None</li></ul><h2 id="Cryptopals-Set-1-Basics">[Cryptopals] Set 1: Basics</h2><ul><li>Convert hex to base64</li></ul><!--- Fixed XOR- Single-byte XOR cipher- Detect single-character XOR- Implement repeating-key XOR- Break repeating-key XOR- AES in ECB mode- Detect AES in ECB mode--><!--## [Cryptopals] Set 2: Block crypto- Implement PKCS#7 padding- Implement CBC mode- An ECB/CBC detection oracle- Byte-at-a-time ECB decryption (Simple)- ECB cut-and-paste- Byte-at-a-time ECB decryption (Harder)- PKCS#7 padding validation- CBC bitflipping attacks## [Cryptopals] Set 3: Block & stream crypto- The CBC padding oracle- Implement CTR, the stream cipher mode- Break fixed-nonce CTR mode using substitutions- Break fixed-nonce CTR statistically- Implement the MT19937 Mersenne Twister RNG- Crack an MT19937 seed- Clone an MT19937 RNG from its output- Create the MT19937 stream cipher and break it## [Cryptopals] Set 4: Stream crypto and randomness- Break "random access read/write" AES CTR- CTR bitflipping- Recover the key from CBC with IV=Key- Implement a SHA-1 keyed MAC- Break a SHA-1 keyed MAC using length extension- Break an MD4 keyed MAC using length extension- Implement and break HMAC-SHA1 with an artificial timing leak- Break HMAC-SHA1 with a slightly less artificial timing leak## [Cryptopals] Set 5: Diffie-Hellman and friends- Implement Diffie-Hellman- Implement a MITM key-fixing attack on Diffie-Hellman with parameter injection- Implement DH with negotiated groups, and break with malicious "g" parameters- Implement Secure Remote Password (SRP)- Break SRP with a zero key- Offline dictionary attack on simplified SRP- Implement RSA- Implement an E=3 RSA Broadcast attack## [Cryptopals] Set 6: RSA and DSA- Implement unpadded message recovery oracle- Bleichenbacher's e=3 RSA Attack- DSA key recovery from nonce- DSA nonce recovery from repeated nonce- DSA parameter tampering- RSA parity oracle- Bleichenbacher's PKCS 1.5 Padding Oracle (Simple Case)- Bleichenbacher's PKCS 1.5 Padding Oracle (Complete Case)## [Cryptopals] Set 7: Hashes- CBC-MAC Message Forgery- Hashing with CBC-MAC- Compression Ratio Side-Channel Attacks- Iterated Hash Function Multicollisions- Kelsey and Schneier's Expandable Messages- Kelsey and Kohno's Nostradamus Attack- MD4 Collisions- RC4 Single-Byte Biases--><h1 id="Cature-the-Flag">Cature the Flag</h1><h2 id="TGHACK20-Resolve">TGHACK20 Resolve</h2><ul><li><a href="/TGHACK20/n00b4-Frequency-Analysis/">[n00b4] Frequency Analysis</a></li><li><a href="/TGHACK20/n00b3-Shifty-Science/">[n00b3] Shifty Science</a></li><li><a href="/TGHACK20/n00b2-Secret-Bases/">[n00b2] Secret Bases</a></li><li><a href="/TGHACK20/n00b1-Number-Trouble/">[n00b1] Number Trouble</a></li></ul><h1 id="None">None</h1><h2 id="None-v2">None</h2><ul><li>None</li><li>None</li></ul>]]></content:encoded>
      
      <comments>https://habit20.github.io/Menu/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://habit20.github.io/hello-world/</link>
      <guid>https://habit20.github.io/hello-world/</guid>
      <pubDate>Sat, 28 Mar 2020 13:51:37 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;Hexo&lt;/a&gt;! This is your very first post.
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>]]></content:encoded>
      
      <comments>https://habit20.github.io/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello! I opened a Blog</title>
      <link>https://habit20.github.io/personal/launch-a-new-blog/</link>
      <guid>https://habit20.github.io/personal/launch-a-new-blog/</guid>
      <pubDate>Wed, 01 Jan 2020 11:08:52 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;2020년-새로운-블로그-런칭하다&quot;&gt;2020년 새로운 블로그 런칭하다.&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;images-1.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;나는 정말 다양한 많은 주제를 가지고 활동하면서 나만의 공간 즉, 정리의 필요성을 느꼈
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="2020년-새로운-블로그-런칭하다">2020년 새로운 블로그 런칭하다.</h2><p><img src="images-1.png" alt></p><p>나는 정말 다양한 많은 주제를 가지고 활동하면서 나만의 공간 즉, 정리의 필요성을 느꼈다. 사람은 자주 사용하는 내용은 오랫동안 기억한다. 하지만 아무리 인상 깊었던 내용도 일정 시간이 흐르면 금세 까먹는다. 누군가 예외는 있겠지만 과거에 관한 내용을 꺼내어 그 당시 진솔한 느낌을 표현하기 어렵다.</p><p>이를 처음 직면한 경우는 고등학교 3학년 대학교 입시를 위한 자기소개서 작성이다. 분명 남들보다 호기심을 가지고 여러 분야에서 활동했지만 문항에 맞는 나에 관한 내용을 작성하는 게 어려웠다. 그럼에도 불구하고 컴퓨터 분야를 배우고 싶은 한가지 목표가 확실했기 때문에 지금의 나를 존재하게 만들지 않을까 싶다.</p><p>사실 옛날부터 네이버 블로그, 티스토리, 스팀잇 등 아주 많이 활동했다. 근데 왜 깃허브 호스팅으로 넘어왔을까? 정답은 조금 더 프로그래밍을 관심갖고 개발하기 위해서다. 깃허브는 대학교 장학생 프로그램 참가하면서 알게 되었다. 블로그 호스팅을 위해 찾던 중, Js, React 등을 다룰 수 있는 <a href="http://gatsbyjs.org/" target="_blank" rel="external nofollow noopener noreferrer">Gatsby</a>, <a href="https://hexo.io/ko/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a> 프레임워크를 발견했다. 여기서 심플하고 퍼포먼스 테스트 점수가 높은 테마를 정해 deploy 시켰다.</p><p>이곳은 앞으로 나에 대한 프로필 작성을 목표한다. 그 과정 중에서 많은 컴퓨터 관련 학술 및 프로젝트에 대해 다뤄보겠다. 가끔 개인적인 일상생활을 더불어 여행, 맛집, 활동 등 소개하겠다. 블로그 프로필 약식 내용에 &quot;'Habit is second nature&quot;을 넣어뒀다. 이는 쉽게 말하자면 &quot;좋은 습관을 가지자&quot;이다.</p><p>닉네임은 왜 “Habit20” 변경했나? 기존 닉네임은 너무 단순해서 조금 색다로운걸 찾다가 변경했다. 앞서 나온 약식과 더불어 2020년 기념해서 “20” 붙였다. 아마 대부분 활동은 변경한 닉네임으로 참가하고 문제를 풀지 않을까 싶다.</p><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/personal/launch-a-new-blog/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Republic of Korea Air Force Diary (A-784)</title>
      <link>https://habit20.github.io/personal/republic-of-korea-air-force/</link>
      <guid>https://habit20.github.io/personal/republic-of-korea-air-force/</guid>
      <pubDate>Sun, 29 Dec 2019 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;대한민국-공군-전역-이야기-병784기&quot;&gt;대한민국 공군 전역 이야기 (병784기)&lt;/h2&gt;
&lt;p&gt;2018년 1월 15일 대한민국 공군 784기 입대 후 2019년 12월 11일 전역까지 이야기를 다뤄본다.&lt;/p&gt;
&lt;h2 id=&quot;1-이병-2
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="대한민국-공군-전역-이야기-병784기">대한민국 공군 전역 이야기 (병784기)</h2><p>2018년 1월 15일 대한민국 공군 784기 입대 후 2019년 12월 11일 전역까지 이야기를 다뤄본다.</p><h2 id="1-이병-2018-01-15-2018-04-14">1. 이병 (2018.01.15 ~ 2018.04.14)</h2><ul><li><h3 id="경상남도-진주시-공군교육사령부-기본군사훈련단">경상남도 진주시 공군교육사령부 기본군사훈련단</h3></li></ul><p>신병 4대대 3중대 1소대 소속을 받았다. 타대대에 비해 열악하고 노후화된 시설에서 훈련병 생활을 지냈지만 나름 20명 정도 같이 생활해 가장 많은 추억을 쌓을 수 있었다. 이전에는 훈련소 수료까지 6주라는 시간을 버텼지만 19년부터 5주로 바뀐 상태이다. 여기서 각종 훈련을 비롯해 종합시험을 통해 본인의 특기를 지정받는다.</p><p>사실 난 다른 사람보다 컴퓨터를 조금 더 다뤄본 자신감 하나로 입대해 관련 특기를 쉽게 받을 수 있을 것만 같았다. 그러나 현실은 기사 자격증 이상을 지닌 전우가 난무했고 분야별 능력자가 많았다. 그 덕분에 자격증 점수가 밀려 정말 원하는 특기는 놓쳤다. 하지만 지금까지의 군 생활을 되돌아보면 배운 것이 많아 상당히 경이롭다.</p><ul><li><h3 id="특기학교-군수1학교">특기학교 (군수1학교)</h3></li></ul><p>훈련소 수료 후 2박 3일 상당히 짧은 휴가를 경상남도 진주시에서 보냈다. 난 무장정비병 특기를 받은 덕분에 군수 1학교에서 생활했다. 이곳은 훈련병 생활과 비교하면 훈련도 없고 많이 쾌적했다. TV, 음료수 자판기, 간이 BX 등을 이용할 수 있어서 제약적인 부분이 꽤 해소되었다. 교육은 학교와 비슷한 곳에서 폭탄/미사일 장착에 관한 이론 및 실습을 배웠다.</p><p>여기서 4주간 생활하면서 현장에서 일어나는 일을 작게나마 간접적으로 느낄 수 있었다. 여기서 한가지 느낀 점은 내가 생각한 이상적인 군 생활과 점점 멀어지는 듯한 기분을 받았다. 그러나 원하는 자대배치를 받기 위해 열심히 공부한 기억이 남는다. 결국, 최종적으로 나는 충청북도 충주시에 있는 19전투비행단을 배정받았다.</p><ul><li><h3 id="全-장병-급여인상">全 장병 급여인상</h3></li></ul><p><a href="https://www.insight.co.kr/news/257163" target="_blank" rel="external nofollow noopener noreferrer">2020년 사병 월급 오른다···병장 월급 40만원→54만원으로 인상</a></p><p>18년 입대자는 17년 입대자와 비교하면 장병 급여가 약 <strong>50% 가량 대폭 상승</strong>했다. 나는 대한민국 제19대 대통령 선거 당시 현 정부의 공약을 꼼꼼하게 읽어봤는데 군 입대를 앞둔 사람에겐 정말 가치 있는 공약이었다. 이 내용뿐만 아니라 군 복무 단축까지 포함되어 정말 현실로 일어날까에 대한 의문이 들었지만 실제로 복무 중 대부분 이뤄졌고 지속해서 진행 중이다.</p><h2 id="2-일병-2018-04-15-2018-11-14">2. 일병 (2018.04.15 ~ 2018.11.14)</h2><ul><li><h3 id="19전투비행단-자대배치">19전투비행단 자대배치</h3></li></ul><p>처음 자대배치를 받으면 소속 대기 중으로 특정 생활관에서 신병끼리 모여 지낸다. 여기서 다른 특기를 받은 친구도 매우 친해질 수 있었다. 어느 정도 시간이 흐르면 으뜸병사 혹은 행정병 등이 찾아와 나를 데려간다. 그러면 이제 다른 특기 동기와 헤어지고 차량탑승 후 본인 특기소속 생활관으로 이동한다.</p><p>특정 대대 배치 후 간단한 신상명세서를 작성한다. 그냥 열심히 내가 무엇을 잘하고 못하고 부족한 점은 무엇인지 등 상세하게 적어두면 그것에 맞게 생활할 수 있도록 군에서는 온 힘을 다해 도와준다. 이 과정까지 마무리하면 세부적인 소속을 받는다. 여기서부터 진짜로 약 <strong>1년 8개월</strong> 생활하는 곳이다.</p><p>최종적으로 세부적인 소속을 받았다면 생활관 이동 후 간단한 자기소개 후 짐 정리를 한다. 이 과정에서 직속 선임을 처음 만난다. 이후 현장에서 무슨 일을 해야 하는지 배울 수 있고 여러모로 관습이나 생활방식 등을 전달받는다. 어떤 사람을 만나느냐에 따라 군 생활이 조금 다르지만 확실한 것은 본인이 맡은 일을 열심히 수행하면 된다.</p><ul><li><h3 id="중대본부-무장기록병-상·하번">중대본부 무장기록병 상·하번</h3></li></ul><p>무장정비병 특기를 받아 대략 7개월 정도 전투기 근처 현장에서 일했다. 특기학교에서 예상했던 것처럼 외부작업으로 날씨 영향이 가장 컸었다. 여름엔 무지 덥고 겨울엔 무지 춥고… 그리고 기억할 수공구가 꽤 많지만, 열심히 공부하면 금방 습득 가능했다. 처음 격납고 안에서 봤던 전투기 생김새는 평생 잊지 못할 것 같다. 공군 특성상 휴가는 한 달 1번 정도 나갔고 현장 작업 인원을 위해 어느 정도 조율을 하는 편이다.</p><p>가장 힘든 일병 생활이 끝날 때쯤, 선임 무장기록병 전역으로 인해 티오가 나왔다. 평소 컴퓨터를 조금 더 다룬다는 이유 하나와 완만한 이미지 때문인지 기록병 선임께서 상번을 도와줬다. 무장기록병은 선임부사관님과 함께 병사 휴가/교육 관리, 전입 신병 인솔, 환경/시설 보수, 운전 등을 맡았다. 대부분 컴퓨터 작업은 한셀 매크로 스크립트 자동화 작업을 보수해 어려움은 없었다. 나머지 환경/시설은 직접 나가서 선임부사관님과 치우고 고쳤다.</p><p>내가 군 생활 중 가장 많이 남는 것은 <strong>운전경험</strong>이다. 사회에서 운전 자체를 해보지 않았기 때문에 서툴렀지만 전역한 선임에게 열심히 배웠다. 머릿속으로 운전 시뮬레이션을 계속 돌렸고 여러 번 연습해 기지면허증을 취득했다. 이후에도 교육/훈련/전달 등을 위해 운전할 수 있는 경험이 수두룩했다. 지금 와서 되돌아보면 지난 운전 연습을 도와준 선임께 감사하다.</p><ul><li><h3 id="또래상담병사-생활관장">또래상담병사 &amp; 생활관장</h3></li></ul><p>무장기록병 상번과 동시에 또래상담병사 티오가 나왔다. 원래 상번하기 결정 난 병사 하나가 있었는데 특정 사유 때문에 상번하지 못했다. 그래서 우연히 기회가 나한테 왔고 급하게 상번하게 되었다. 생각지도 못한 기회라서 당황스러웠지만, 최대한 새로 들어온 후임 처지에서 생각해보고 어색하지 않도록 노력했었다.</p><p>중간중간 군 생활을 적응 못 하거나 특기 때문에 고생하는 친구도 꽤 있었지만, 그때마다 격려와 칭찬을 통해서 본인의 강점을 존중했고 일으켜 세웠다. 이 활동을 하면서 사람마다 다른 점은 분명히 존재한다는 것을 느낄 수 있었고 상황에 맞게 대처할 능력을 키울 수 있었다. 여기서 가장 중요한 점은 편견 없이 서로 대하는 게 가장 중요해 보였다.</p><p>다시 이 활동을 돌아보면 모두에게 &quot;조금 더 잘해줄 수 있었을 텐데&quot;라는 아쉬움 하나가 남는다. 나를 포함해 상대 처지를 생각하는 것은 정말 어렵고 중요한 일이다. 근데 가끔 상대방을 고려하지 않고 행동한 점이 있어서 많이 안타깝다. 그래서 지금은 최대한 상대방 입장을 고려하고 올바른 행동을 실천하도록 노력한다.</p><h2 id="3-상병-2018-11-15-2019-06-14">3. 상병 (2018.11.15 ~ 2019.06.14)</h2><ul><li><h3 id="사무실-책상·의자-교체">사무실 책상·의자 교체</h3></li></ul><p>이 업무는 상당히 고된 작업이었다. 무장기록병 상번한지 얼마 되지 않아 모든 사무실의 노후화된 책상·의자를 다 함께 교체했다. 이 과정에서 컴퓨터 인트라넷 연결까지 전부 다시 했고 간단한 군 내부망 구조파악, 랜툴세트, 각종 케이블 등을 많이 다뤘다. 여기서 가장 인상 깊었던 점 하나는 수많은 책상·의자 교체 후  철재·목재·플라스틱 모두 따로 분해한 다음 폐기 처분해 버린 점이 가장 힘들었고 기억에 남는다.</p><ul><li><h3 id="兵-군-복무-단축-실시">兵 군 복무 단축 실시</h3></li></ul><p>18년 3분기쯤 군 복무 단축 관련 문서가 공식보도 되었다. 지금 생각하면 18~19년은 정말 변화를 추구한 한 해가 아닐까 싶다. 보통 모든 부대가 그렇듯 이전 관습을 중시하는 문화가 조금은 남아있었는데 휴대폰 사용 때문인지 거의 없어지는 추세이다. 이는 앞으로 몇 년간 더욱더 개인을 존중하는 문화가 형성되지 않을까 싶다.</p><p>군 복무 단축은 <strong>육군·해군 21 → 18개월, 공군 24 → 22개월</strong> 단축되었다. 나는 대한민국 공군 18년 1월 입대자로서 약 34일 정도 단축되었다. 22개월 모두 줄어든 시점은 19년 1월 입대자부터 60일 단축되었다. 앞으로 2020년 대한민국 공군 입대자는 추가로 1개월 줄어들어 총 21개월 복무할 가능성은 상당히 크다.</p><p>또 장병 급여가 18년 인상 후 19년 동결이었으나 20년부터 다시 급여 인상될 것으로 예상한다. 이 점을 참고해 아직 입대하지 않은 성인 남성은 준비하면 좋을 것 같다. 대한민국 공군은 22개월 전역까지 약 1000만원 가량 모을 수 있었다. 공군 복무 기간 1개월 추가 단축해도 2020년 급여인상까지 생각하면 총금액 변동은 완충 될 것으로 예상한다.</p><ul><li><h3 id="일과-후-兵-휴대폰-사용">일과 후 兵 휴대폰 사용</h3></li></ul><p><a href="https://news.joins.com/article/23601383" target="_blank" rel="external nofollow noopener noreferrer">육군, “휴대전화 사용 허용 후 병사 일탈 줄어”</a></p><p>19년 2월에서 3월경 국방공보에서 “일과 후 병사 휴대폰 사용허용” 관련 내용이 보도되었다. 이후 격오지 부대부터 점차 추진되었다. 이때 당시 설렘 반, 걱정 반으로 “진짜일까?” 라는 모두 같은 마음을 가지고 기다렸다. 우리 부대를 포함해 모든 군부대가 사용한 시기는 아마 3월에서 4월경으로 기억한다.</p><p>난 무장기록병 업무를 보고 있었기 때문에 우리 소속 병사 휴대폰 약 50대 인가시키고 행정처리를 도왔다. 지금은 모든 병사가 일과 후 휴대폰 사용 중인데 없었던 시절과 비교해보면 분위기가 확연히 바뀐 것 같다. 평소보다 사람 간의 대화가 줄어들고 티비 시청 및 움직임이 잦아들었으며 사이버지식정보방 사용자가 대폭 감소하였다.</p><ul><li><h3 id="공군-카페-“휴머니스트”">공군 카페 “휴머니스트”</h3></li></ul><p>대한민국 공군은 타군과 다르게 인트라넷 커뮤니티가 존재한다. 그중에서 휴머니스트는 제일 큰 규모를 자랑한다. 이곳에서 각종 소식을 교류할 수 있으며 자신이 알고 있는 교양·지식을 게시물 정리 후 공유한다. 여기서 나는 컴퓨터·경제·수학 관련 내용을 자주 보면서 간단한 경제이론 그리고 프로그래밍·한셀에 대해 공부했다.</p><p>상대적으로 컴퓨터 다루는 시간이 많은 나는 우연히 카페 매니저님과 함께 여러 게시판 운영을 돕게 되었다. 이에 대한 상세한 내용은 군 특성상 담기 어렵지만, 누군가의 노고 덕분에 좋은 정보를 얻을 수 있다는 것은 확실하다. 휴머니스트는 군 내에서 조금 더 관심을 두면 타군 대비 충분히 가치 있는 기회의 공간으로 보인다.</p><h2 id="4-병장-2019-06-15-2019-12-11">4. 병장 (2019.06.15 ~ 2019.12.11)</h2><ul><li><h3 id="兵-군-계급별-진급-기간-변경">兵 군 계급별 진급 기간 변경</h3></li></ul><p><a href="https://www.hankyung.com/politics/article/201908266869Y" target="_blank" rel="external nofollow noopener noreferrer">이병 2개월-일병·상병 각 6개월 복무하면 진급한다</a></p><p>기존 계급별 진급 기간은 이병 3개월, 일·상병 7개월, 병장 7개월이다. 변경 후 대한민국 공군은 <strong>이병 2개월, 일·상병 6개월, 병장 8개월</strong>이다. 21개월 추가 단축하면 병장은 7개월이다. 이렇게 변경한 큰 이유는 숙련도가 높은 병장 계급을 최대한 활용해 군 전투력 유지인데 급여를 조금 더 받으나 병사 처지에서 현실적으로 더 루즈해 보인다.</p><ul><li><h3 id="한식-중식-치킨">한식, 중식, 치킨 (?)</h3></li></ul><p>이 부분에 대해 상세한 내용을 다룰 수 없으나 3가지 모두 존재한다. 여기서 치킨집은 19년 기준 프랜차이즈 XX큐이다. 따라서 부대 내 이용까지 가능한데 보통 간부님과 동행을 원칙으로 이용한다. 타군에 비하면 무엇이든 접근할 수 있는 폭이 넓고 조금 더 혜택 있는 군 생활이 가능한 곳이 대한민국 공군이다.</p><ul><li><h3 id="KT-기가지니">KT 기가지니</h3></li></ul><p>병사 생활관 티비 **“LG U+” 에서 “KT 기가지니”**로 모두 변경됐다. 따라서 기가지니 음성인식을 통해 티비 전원관리 및 다양한 정보를 실시간으로 얻을 수 있었다. 초반쯤 유튜브 시청까지 가능했지만, 라이브 방송 때문인지 소프트웨어적으로 제한되었다. (단, 기가지니는 업무를 진행하는 곳은 설치되지 않았다.)</p><ul><li><h3 id="푸드트럭">푸드트럭 (???)</h3></li></ul><p>병사의 날, 푸드트럭 행사를 진행하기 위해서는 어느 정도 병사 규모가 있어야 하며 아주 넓은 공간은 필수이다. 이에 적합한 내가 복무한 부대는 5-6대 푸드트럭 외부 차량 인가를 통해 업무로 지친 全 병사의 사기를 높였다. 이는 22개월 군 생활 중 단 한 번 있었던 특별한 경험으로 아직 기억 남는다.</p><ul><li><h3 id="브런치-배식">브런치 배식</h3></li></ul><p>주말 아침·점심 겸으로 브런치 배식까지 추진했었다. 이전과 달리 무엇이든 형식적인 내용 안에서 벗어나는 시도는 기존의 관습을 배제하는데 시너지 효과로 작용할 것으로 보인다. 매일 반복적이고 비슷한 음식을 먹다 보니 이러한 새로움은 병사에게 반갑지 않을까 라는 생각이 든다.</p><ul><li><h3 id="윈도우-10">윈도우 10</h3></li></ul><p><a href="https://news.mt.co.kr/mtview.php?no=2019120614205832168" target="_blank" rel="external nofollow noopener noreferrer">지원 종료 윈도우7 계속 사용해도 되나요?</a></p><p>2014년 하반기쯤 런칭해 나왔고 어느 정도 안정성을 인정받았다. 19년 하반기 모든 부대 내 윈도우 10 도입 중이다. 여기서 변경된 가장 큰 이유는 “2020년 1월 14일, 윈도우 7 기술지원” 종료 때문이다. 이로 인해 보안상 문제를 최소화시키기 위해 향후 몇 년간 노후화된 데스크탑 및 장비까지 교체할 것으로 보인다.</p><ul><li><h3 id="전역식">전역식</h3></li></ul><p><strong>나에게 절대 오지 않을 것 같은 전역 날이 다가왔다.</strong> 모두에게 박수갈채를 받으며 단장님을 비롯해 많은 지휘관님과 악수했다. 그리고 1년 8개월간 정들었던 부대를 나왔는데 상당히 기분이 묘했다. 그간 있었던 고마웠던 점을 모두에게 돌려주지 못했지만 정말 다행히 사고 없이 건강하게 전역했다. 나중에 기회가 된다면 다시 찾아가 고마움을 보답하고 싶다.</p><p>이 글을 통해 19전투비행단 모든 지휘관 또는 주임원사님, 선임부사관님, 선·후임·동기, 클오클 클랜 가족 등에게 모두 고맙다는 말을 전하고 싶다. 인생을 살면서 영원히 까먹지 않도록 최대한 빨리 글을 작성했지만, 혹시나 빠졌거나 부족한 점은 너그럽게 봐줬으면 좋겠다.</p><h2 id="5-마치며">5. 마치며</h2><p>대한민국 군대는 실시간으로 즉각 반응하는 생태계이다. 그 과정에서 매끄럽게 처리되지 못하는 점도 많았지만, 모두 국방의 의무를 위해서 최선을 다해 복무 중이다. 한 명의 실수로 전체가 피해 볼 수 있는 공동체인 만큼 함께 관심 가지면 좋겠다. 만약 사회에서 군인을 만난다면 모두가 반갑게 격려해주면 좋겠다.</p><p>2019년 12월 11일, 대한민국 공군병 784기 전역식을 무사히 마치고 집으로 돌아왔다. 이전부터 내가 기록한 자료부터 프로그램까지 2017년 입대 전 기준이라 2019년으로 모두 업데이트했다. 앞으로 나는 2020년 대학교 복학 준비를 위해 프로그래밍 복습과 동아리 운영계획 등을 꾸준히 준비할 예정이다. 이외에도 목표와 버킷리스트를 탄탄하게 세워 대학교 생활과 미래를 위해 준비하겠다.</p><p>마지막으로 이 글을 읽어준 모든 여러분에게 감사하다. 장문의 글은 오랜만에 작성해 글솜씨가 별로 좋지 않지만 2년을 헛되이 남기지 않기 위해 기억나는 부분을 열심히 작성했다. 만약 더욱더 인상깊었던 내용이 떠오른다면 나중에 추가적으로 게시물 수정 예정이다.</p><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/personal/republic-of-korea-air-force/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Simple Blockchain Description</title>
      <link>https://habit20.github.io/personal/simple-blockchain-description/</link>
      <guid>https://habit20.github.io/personal/simple-blockchain-description/</guid>
      <pubDate>Mon, 30 Oct 2017 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;블록체인-세계경제-이끄는-새로운-모터&quot;&gt;블록체인, 세계경제 이끄는 새로운 모터!&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;images-1.jpg&quot; alt=&quot;기존 거래 방식과 블록체인 방식의 거래내역의 차이 (이미지출처 : SW중심사회)&quot;&gt;&lt;/p&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="블록체인-세계경제-이끄는-새로운-모터">블록체인, 세계경제 이끄는 새로운 모터!</h2><p><img src="images-1.jpg" alt="기존 거래 방식과 블록체인 방식의 거래내역의 차이 (이미지출처 : SW중심사회)"></p><p>2017년, 세계 경제 1시장의 실물적 화폐는 더 이상 성장하기 힘들어졌다. 경제가 어려워지면 분야별 시장의 버블과 화폐 공급량을 조절하여 극복하였지만, 2008년 이후 경제 규모가 커지면서 어려움을 전 세계가 안겼다. 따라서 새로운 모터가 필요한데 그것은 암호학 분야의 끝판인 전자코드에 원본성을 부여한 ‘블록체인(Block Chain)’ 기술이다.</p><p>이 기술의 핵심은 ‘임의 조작’을 불가능하도록 고안되었으며, 대표적인 응용사례는 2008년 10월 ‘사토시 나가모토’라는 가명을 쓰는 프로그래머가 개발한 ‘비트코인’ 이다. 2009년 1월 프로그램 소스를 배포하여, 중앙은행 없이 전 세계적 P2P 방식으로 개인끼리 금융거래를 할 수 있게 설계했다. 거래장부는 SHA-256 기반의 암호 해시 함수를 사용해 여러 사용자의 서버에 분산하여 저장하였다.</p><p>이와 같은 기술로 이더리움 창시자 ‘비탈릭 부테린’은 결제 및 거래 관련 시스템에 집중하는 비트코인과 달리 거래나 결제뿐만 아니라 계약서, SNS, 이메일, 전자투표 등 다양한 애플리케이션을 투명하게 운영할 수 있게 확장성을 제공했다. 즉, 화폐로서 다용도 활용이 가능하도록 말이다. 또 이를 기반으로 코인마켓캡(<a href="http://Coinmarketcap.com" target="_blank" rel="external nofollow noopener noreferrer">Coinmarketcap.com</a>)에 등재된 코인 수는 무려 1,277 가지(2017.11.09) 이상 존재하며 전 세계와 많은 이들에게 주목받는 상태이다.</p><p><img src="images-2.jpg" alt="전 세계 암호화폐 수요량 그래프 (이미지출처 : Coinmarketcap)"></p><p>2017년 11월 1일 월요일 오전 기점으로 암호화폐(Cryptocurrency) 전체 규모는 ‘208조 달러’ 최고점(ATH)을 갱신 중이다. 1995년부터 2000년까지 발생한 ‘닷컴 버블’은 인터넷 관련 분야가 성장하면서 산업 국가의 주식 시장이 빠르게 상승했는데, 이를 암호화폐 시장과 비교하면 차트 그래프가 상당히 유사하다. 심지어 비트코인(BTC) 그래프는 더욱더 가파른 경사로 빠르게 성장 중이다.</p><p>비트코인은 ‘2016년 12월부터 ~ 2017년 11월 1까지’ 약 10배 이상 상승을 보여줬다. 과연, 이 상황은 우연히 일어난 것일까? 필자는 절대 아니라 생각한다. 기존의 세계 경제는 너무나 커졌고 침체한 상태이며, 새로운 경제 구조를 원하고 있다. 이것은 세계 정부, 금융, 부동산 등 분야가 관심 두는 이유 중 하나이다. 하지만 이 시장은 모든 투자자와 알트코인을 쉽게 부자로 만들어주지 않는다. 따라서 한정적인 시간을 가진 우리는 그 기간 내 암호화폐에 대한 신념을 확립하고 투자하는게 좋다.</p><p>그렇다면, 우리와 같은 평범한 직장인 혹은 대학생은 이 시장에 어떻게 대응하면 좋을까? 사실 명백한 정답은 없지만, 우리가 현재 놓여있는 상황에 대응하는 자세를 지니면 좋다. 최대한 세계 경제와 블록체인 기술 내용을 공부하여 통찰력을 기르고, 심리적인 요소를 배제하면 작게나마 부자로 거듭날 것이다. 암호화폐 시장은 몇 년간 비트코인을 많이 소유한 자로부터 움직일 것이고, 점차 우리의 삶과 일상 속에 적용되어 자연스레 거대한 경제 규모가 안정적으로 탄생할 것이다.</p><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/personal/simple-blockchain-description/#disqus_thread</comments>
    </item>
    
    <item>
      <title>University Exhibition 2018</title>
      <link>https://habit20.github.io/personal/university-exhibition-2018/</link>
      <guid>https://habit20.github.io/personal/university-exhibition-2018/</guid>
      <pubDate>Sat, 29 Jul 2017 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;2018학년도-수시-대학입학정보-박람회&quot;&gt;2018학년도 수시 대학입학정보 박람회&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;안녕하세요! 공주대학교 학생홍보대사 두빛나래 최연우 입니다 😄 항상 어떤 좋은 내용을 스팀잇에 전달할까 많은 고민을 했는데
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="2018학년도-수시-대학입학정보-박람회">2018학년도 수시 대학입학정보 박람회</h2><ul><li><p>안녕하세요! 공주대학교 학생홍보대사 두빛나래 최연우 입니다 😄 항상 어떤 좋은 내용을 스팀잇에 전달할까 많은 고민을 했는데, 그때 마침 @sweeti 님의 <a href="https://steemkr.com/kr/@sweeti/sweeti-s-3-8" target="_blank" rel="external nofollow noopener noreferrer">스팀잇을 3주동안 이용하면서 느낀점과 새로운 뉴비분들께 드리는 팁 8가지와 그 외의 소소한 팁들</a>을 접하게 되었습니다.</p></li><li><p>그래서 감명 깊게 읽은 &quot;자신만의 브랜드 이미지를 만드세요&quot;로 대학교 활동 중 하나! 홍보대사 활동에 대해 조금씩 글을 써볼려고 합니다. 최근, 대학입시 시즌이므로 <b>2018학년도 수시 대학입학정보 박람회</b>를 소개합니다! 이 글을 읽고 꼭 가보고 싶은 분은 마지막 남은 <strong>2017년 7월 30일 일요일</strong>에 꼭 코엑스에서 참여 부탁드립니다!!</p></li><li><p>코엑스 수시박람회는 <strong>매년 1회씩 7월 말</strong>에 진행됩니다. 대학입시에 관하여 가장 큰 규모를 자랑하고 있으며 삼성역과 봉은사역 부근 <strong>코엑스 1층 A홀에서 오전 10시부터 오후 5시</strong>까지 진행됩니다. 각 학교마다 부스가 설치되어 있으며 상담을 받을 수 있고 모집요강을 볼 수 있는 것이 장점입니다.</p></li></ul><p><img src="images-1.jpg" alt></p><ul><li><p>각 학교마다 위치가 있으니 위 사진을 참조해서 잘 찾으시면 좋겠습니다! 입구로 들어가시면 엄청나게 넓고 길을 헤맬 수 있는데 약간의 꿀팁이라면 입구가 <strong>GATE 3</strong> 쪽이고, 근처에 <strong>화장실</strong>이 있으니 참고하시면 좋겠습니다. <sup>0</sup></p></li><li><p>또 <strong>입장료 1000원</strong>이 필요하고, 아침 일찍 도착하시면 대기자로 기다리셔야 합니다. 전시홀 입구 쪽에 책자를 나눠주며 안내데스크가 있으니 궁금한 사항은 물어보시면 친절하게 알려주십니다. 아침 9시도 고등학생 친구들이 단체로 오기 때문에 인원이 꽤 있는 편입니다.</p></li><li><p>입구가 열리면 금방 인원이 빠지니 엄청 일찍 오시거나 염려하지 않으셔도 됩니다 😃 또 어떤 코스로 어디 대학을 갈 것인지 미리미리 정하시면 상담 대기를 빠르게 진행할 수 있으며, 시간 절약도 가능하니 꼭 계획수립해서 오시면 좋겠습니다!</p></li><li><p>상담요청을 위해서 필요한 자료는 <strong>고등학교 생활기록부</strong> 혹은 <strong>본인의 내신 성적</strong>입니다! 공주대학교는 교과, 종합, 실기, 수능에 대하여 상담이 가능하며 이 부분은 대학마다 다를 수도 있으니 꼭 부스 스탭에게 물어보시면 좋겠습니다.</p></li><li><p>또 본인이 <strong>어떤 학교에서 어떤 전형을 준비중</strong>인지, 미리미리 준비하면 더욱더 정확한 정보로 해당 학교 선생님과 상담이 가능합니다. 어떤 일이든 앞서서 준비하는 사람이 이 시대에서 훌륭한 인재로 거듭나는 것 같습니다. 모두 함께 미래에 대해 한번씩 고민해봅시다!</p></li></ul><p><img src="images-2.jpg" alt></p><ul><li><p>모든 부스는 <strong>대학명</strong>과 함께 크게 써있으며, 부스 모서리 쪽에 학교 이름이 있습니다.</p></li><li><p>부스 가운데에서 상담요청 및 입시요강을 받을 수 있습니다. <strong>질문요청 언제나 환영 !</strong></p></li><li><p>부스 운영 스탭은 <strong>재학생 홍보대사</strong> 혹은 **입학처 선생님(입학사정관 선생님 포함)**입니다.</p></li><li><p>정시 모집요강은 없으며 <strong>12월 중순쯤 2018학년도 정시 대학입학정보박람회</strong>가 개최됩니다.</p></li><li><p>대학교마다 모집요강과 함께 제공하는 <strong>기념품</strong>을 모아보는 재미까지 누려보세요 !</p></li></ul><p>※ 원글 내용을 바탕으로 증발한 사진을 제외시키고 게시물 정리했습니다. ※</p><p>원글 : <a href="https://steemit.com/kr/@ez2bt/2018-1-2018-korean-university-college-admission-fair" target="_blank" rel="external nofollow noopener noreferrer">Steemit</a></p><div style="text-align: right">Rmx.</div>]]></content:encoded>
      
      <comments>https://habit20.github.io/personal/university-exhibition-2018/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
